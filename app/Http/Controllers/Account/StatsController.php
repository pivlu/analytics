<?php

/**
 * Pivlu Analytics - Open source and privacy-friendly web analytics.
 * https://analytics.pivlu.com
 *
 * Copyright (c) Chimilevschi Iosif Gabriel
 * LICENSE:
 * Permissions of this strongest copyleft license are conditioned on making available complete source code 
 * of licensed works and modifications, which include larger works using a licensed work, under the same license. 
 * Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. 
 * When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.
 *    
 * @copyright   Copyright (c) Chimilevschi Iosif Gabriel
 * @license     https://opensource.org/license/agpl-v3  AGPL-3.0 License.
 * @author      Chimilevschi Iosif Gabriel <office@pivlu.com>
 *  * 
 *  DO NOT edit this file manually. All changes will be lost after software update.
 */

namespace App\Http\Controllers\Account;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\Site;
use App\Models\SiteUser;
use App\Models\LogSession;
use App\Models\LogVisitor;
use App\Models\StatsRecent;
use App\Models\LogPage;
use Auth;

class StatsController extends Controller
{

    public function __construct(Request $request) {}

    /**
     * Show stats dashboard
     */
    public function index(Request $request)
    {
        $site = Site::where('code', $request->code)->first();
        if (!$site) return redirect(route('user.sites.index'));

        // check permission
        if (SiteUser::where('site_id', $site->id)->where('role', 'admin')->where('user_id', Auth::user()->id)->doesntExist()) return redirect(route('user.sites.index'));
        
        $date_today = date('Y-m-d');
        $date_yesterday = date('Y-m-d', strtotime("-1 days"));
        $date_7_days_ago = date('Y-m-d', strtotime("-7 days"));
        $date_30_days_ago = date('Y-m-d', strtotime("-30 days"));

        $stats_today_visitors = LogVisitor::where('site_id', $site->id)->whereDate('created_at', $date_today)->count();
        $stats_today_views = LogSession::where('site_id', $site->id)->whereDate('created_at', $date_today)->count();

        $stats_yesterday_visitors = LogVisitor::where('site_id', $site->id)->whereDate('created_at', $date_yesterday)->count();
        $stats_yesterday_views = LogSession::where('site_id', $site->id)->whereDate('created_at', $date_yesterday)->count();

        $stats_last_7_days_visitors = LogVisitor::where('site_id', $site->id)->whereDate('created_at', '>=', $date_7_days_ago)->count();
        $stats_last_7_days_views = LogSession::where('site_id', $site->id)->whereDate('created_at', '>=', $date_7_days_ago)->count();

        $stats_last_30_days_visitors = LogVisitor::where('site_id', $site->id)->whereDate('created_at', '>=', $date_30_days_ago)->count();
        $stats_last_30_days_views = LogSession::where('site_id', $site->id)->whereDate('created_at', '>=', $date_30_days_ago)->count();

        $recent_visitors = LogVisitor::withCount('sessions')->where('site_id', $site->id)->orderByDesc('created_at')->limit(25)->get();
        $recent_pages = LogSession::with('page')->where('site_id', $site->id)->orderByDesc('created_at')->limit(35)->get();
        $recent_distinct_pages = collect($recent_pages)->unique('page_id');

        $chart_date_start = date('Y-m-d', strtotime("-14 days"));
        $stats_traffic = StatsRecent::where('site_id', $site->id)->where('day', '>=', $chart_date_start)->where('day', '<', date('Y-m-d'))->get();

        return view('account.index', [
            'view_file' => 'stats.index',
            'active_menu' => 'overview',
            'site' => $site,
            'recent_visitors' => $recent_visitors,
            'recent_distinct_pages' => $recent_distinct_pages,

            'stats_today_visitors' => $stats_today_visitors,
            'stats_today_views' => $stats_today_views,

            'stats_yesterday_visitors' => $stats_yesterday_visitors,
            'stats_yesterday_views' => $stats_yesterday_views,

            'stats_last_7_days_visitors' => $stats_last_7_days_visitors,
            'stats_last_7_days_views' => $stats_last_7_days_views,

            'stats_last_30_days_visitors' => $stats_last_30_days_visitors,
            'stats_last_30_days_views' => $stats_last_30_days_views,

            'stats_traffic' => json_decode($stats_traffic),

            'date_today' => $date_today,
            'date_yesterday' => $date_yesterday,
            'date_7_days_ago' => $date_7_days_ago,
            'date_30_days_ago' => $date_30_days_ago,
        ]);
    }



    /**
     * Pages stats
     */
    public function pages(Request $request)
    {
        $site = Site::where('code', $request->code)->first();
        if (!$site) return redirect(route('user.sites.index'));

        // check permission
        if (SiteUser::where('site_id', $site->id)->where('role', 'admin')->where('user_id', Auth::user()->id)->doesntExist()) return redirect(route('user.sites.index'));      

        $pages = LogSession::with('page')->where('site_id', $site->id)->orderByDesc('created_at')->paginate(25);

        return view('account.index', [
            'view_file' => 'stats.pages',
            'active_menu' => 'pages',
            'site' => $site,
            'pages' => $pages,            
        ]);
    }


    /**
     * Visitors stats
     */
    public function visitors(Request $request)
    {
        $site = Site::where('code', $request->code)->first();
        if (!$site) return redirect(route('user.sites.index'));

        // check permission
        if (SiteUser::where('site_id', $site->id)->where('role', 'admin')->where('user_id', Auth::user()->id)->doesntExist()) return redirect(route('user.sites.index'));
       
        $visitors = LogVisitor::withCount('sessions')->where('site_id', $site->id)->orderByDesc('created_at')->paginate(25);

        return view('account.index', [
            'view_file' => 'stats.visitors',
            'active_menu' => 'visitors',
            'site' => $site,
            'visitors' => $visitors,
        ]);
    }


    /**
     * Page stats
     */
    public function page_stats(Request $request)
    {
        $site = Site::where('code', $request->code)->first();
        if (!$site) return redirect(route('user.sites.index'));

        // check permission
        if (SiteUser::where('site_id', $site->id)->where('role', 'admin')->where('user_id', Auth::user()->id)->doesntExist()) return redirect(route('user.sites.index'));

        $page = LogPage::where('hash', $request->hash)->first();
        if (!$page) return redirect(route('user.sites.index'));

        $sessions = LogSession::with('visitor')->where(['site_id' => $site->id, 'page_id' => $page->id])->orderByDesc('created_at')->paginate(25);

        return view('account.index', [
            'view_file' => 'stats.page-stats',
            'active_menu' => 'pages',
            'site' => $site,
            'page' => $page,
            'sessions' => $sessions,
        ]);
    }
}
